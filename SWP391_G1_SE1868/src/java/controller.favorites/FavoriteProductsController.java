package controller;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/JSP_Servlet/Servlet.java to edit this template
 */
import dbcontext.ProductDAO;
import entity.Customer;
import entity.Product;
import jakarta.servlet.RequestDispatcher;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import java.io.IOException;
import java.util.List;
import Utils.FormatUtils;
import dbcontext.FavoriteDAO;
import entity.Favorite;


/**
 *
 * @author Giang123
 */
public class FavoriteProductsController extends HttpServlet {

    private static final int PAGE_SIZE = 5; //S·ªë s·∫£n ph·∫£m m·ªói trang

    
    /**
     * Processes requests for both HTTP <code>GET</code> and <code>POST</code>
     * methods.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    protected void processRequest(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        response.setContentType("text/html;charset=UTF-8");

    }

    // <editor-fold defaultstate="collapsed" desc="HttpServlet methods. Click on the + sign on the left to edit the code.">
    /**
     * Handles the HTTP <code>GET</code> method.
     *
     * @param request servlet request
     * @param response servlet response
     * @throws ServletException if a servlet-specific error occurs
     * @throws IOException if an I/O error occurs
     */
    @Override
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
        HttpSession session = request.getSession(false);

        if (session == null || session.getAttribute("customer") == null) {
            response.sendRedirect("login.jsp");
            return;
        }

        Customer customer = (Customer) session.getAttribute("customer");
        int customerId = customer.getCustomerId();

        int page = 1;
        if (request.getParameter("page") != null) {
            page = Integer.parseInt(request.getParameter("page"));
        }

        FavoriteDAO favoriteDAO = new FavoriteDAO();
        List<Favorite> favoriteProducts = favoriteDAO.getFavoriteProducts(customerId, page, PAGE_SIZE);
        int totalFavorite = favoriteDAO.getTotalFavoriteProducts(customerId);
        int totalPages = (int) Math.ceil((double) totalFavorite / PAGE_SIZE);

        // üëâ ƒê·ªãnh d·∫°ng gi√° ti·ªÅn tr∆∞·ªõc khi g·ª≠i sang JSP
        for (Favorite favorite : favoriteProducts) {
            favorite.setFormattedPrice(FormatUtils.formatCurrency(favorite.getPrice()));
        }

        request.setAttribute("favoriteProducts", favoriteProducts);
        request.setAttribute("currentPage", page);
        request.setAttribute("totalPages", totalPages);

        RequestDispatcher dispatcher = request.getRequestDispatcher("favorites.jsp");
        dispatcher.forward(request, response);
    
    }
//        HttpSession session = request.getSession(false);
//
//        if (session == null || session.getAttribute("customer") == null) {
//            response.sendRedirect("login.jsp");
//            return;
//        }
//
//        Customer customer = (Customer) session.getAttribute("customer");
//        int customerId = customer.getCustomerId();
//
//        ProductDAO productDAO = new ProductDAO();
//        List<Product> favoriteProducts = productDAO.getFavoriteProducts(customerId);
//
//        request.setAttribute("favoriteProducts", favoriteProducts);
//        RequestDispatcher dispatcher = request.getRequestDispatcher("/favorites/favorites.jsp");
//        dispatcher.forward(request, response);
//         // L·∫•y HttpSession t·ª´ request
//        HttpSession session = request.getSession();
//        
//        // L·∫•y ƒë·ªëi t∆∞·ª£ng Customer t·ª´ session
//        Customer customer = (Customer) session.getAttribute("customer");
//        
//        // Ki·ªÉm tra xem ƒë·ªëi t∆∞·ª£ng Customer c√≥ t·ªìn t·∫°i trong session kh√¥ng
//        if (customer == null) {
//            // N·∫øu kh√¥ng c√≥ customer, c√≥ th·ªÉ chuy·ªÉn h∆∞·ªõng v·ªÅ trang ƒëƒÉng nh·∫≠p
//            response.sendRedirect("login.jsp");
//            return;
//        }
//        
//        // L·∫•y customerID t·ª´ ƒë·ªëi t∆∞·ª£ng Customer
//        int customerId = customer.getCustomerId(); // Gi·∫£ s·ª≠ Customer c√≥ ph∆∞∆°ng th·ª©c getCustomerID()
//        
//        // T·∫°o ƒë·ªëi t∆∞·ª£ng DAO ƒë·ªÉ truy xu·∫•t d·ªØ li·ªáu
//        ProductDAO favoriteProductDAO = new ProductDAO();
//        
//        // L·∫•y danh s√°ch s·∫£n ph·∫©m y√™u th√≠ch t·ª´ DAO
//        List<Product> favoriteProducts = favoriteProductDAO.getFavoriteProducts(customerId);
//        
//        // ƒê∆∞a danh s√°ch s·∫£n ph·∫©m y√™u th√≠ch v√†o request attribute ƒë·ªÉ JSP s·ª≠ d·ª•ng
//        request.setAttribute("favoriteProducts", favoriteProducts);
//        
//        // Chuy·ªÉn ti·∫øp (forward) ƒë·∫øn trang JSP
//        RequestDispatcher dispatcher = request.getRequestDispatcher("/favorites/favorites.jsp");
//        dispatcher.forward(request, response);
        /**
         * Handles the HTTP <code>POST</code> method.
         *
         * @param request servlet request
         * @param response servlet response
         * @throws ServletException if a servlet-specific error occurs
         * @throws IOException if an I/O error occurs
         */
        @Override
        protected void doPost
        (HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {
//        // L·∫•y HttpSession t·ª´ request
//        HttpSession session = request.getSession();
//        
//        // L·∫•y ƒë·ªëi t∆∞·ª£ng Customer t·ª´ session
//        Customer customer = (Customer) session.getAttribute("customer");
//        
//        if (customer == null) {
//            // N·∫øu kh√¥ng c√≥ customer, chuy·ªÉn h∆∞·ªõng v·ªÅ trang ƒëƒÉng nh·∫≠p
//            response.sendRedirect("login.jsp");
//            return;
//        }
//        
//        // L·∫•y customerID t·ª´ ƒë·ªëi t∆∞·ª£ng Customer
//        int customerID = customer.getCustomerId();
//        
//        // L·∫•y th√¥ng tin s·∫£n ph·∫©m t·ª´ request (c√≥ th·ªÉ l√† ID s·∫£n ph·∫©m v√† s·ªë l∆∞·ª£ng)
//        int productID = Integer.parseInt(request.getParameter("productID"));
//        int quantity = Integer.parseInt(request.getParameter("quantity"));
//
//        // T·∫°o ƒë·ªëi t∆∞·ª£ng DAO ƒë·ªÉ c·∫≠p nh·∫≠t th√¥ng tin gi·ªè h√†ng ho·∫∑c s·∫£n ph·∫©m y√™u th√≠ch
//        ProductDAO productDAO = new ProductDAO();
//
//        try {
//            // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m y√™u th√≠ch trong c∆° s·ªü d·ªØ li·ªáu
//            boolean success = productDAO.updateFavoriteQuantity(customerID, productID, quantity);
//
//            if (success) {
//                // L·∫•y l·∫°i danh s√°ch s·∫£n ph·∫©m y√™u th√≠ch sau khi c·∫≠p nh·∫≠t
//                List<Product> favoriteProducts = productDAO.getFavoriteProducts(customerID);
//
//                // ƒê∆∞a danh s√°ch s·∫£n ph·∫©m y√™u th√≠ch v√†o request attribute ƒë·ªÉ JSP s·ª≠ d·ª•ng
//                request.setAttribute("favoriteProducts", favoriteProducts);
//
//                // Chuy·ªÉn ti·∫øp (forward) ƒë·∫øn trang JSP hi·ªÉn th·ªã gi·ªè h√†ng
//                RequestDispatcher dispatcher = request.getRequestDispatcher("/favorites/favorites.jsp");
//                dispatcher.forward(request, response);
//            } else {
//                // N·∫øu c√≥ l·ªói khi c·∫≠p nh·∫≠t, chuy·ªÉn h∆∞·ªõng t·ªõi trang l·ªói
//                request.setAttribute("errorMessage", "C·∫≠p nh·∫≠t gi·ªè h√†ng th·∫•t b·∫°i.");
//                RequestDispatcher dispatcher = request.getRequestDispatcher("/error.jsp");
//                dispatcher.forward(request, response);
//            }
//
//        } catch (IOException e) {
//            // X·ª≠ l√Ω l·ªói v√† ghi log
//            log("L·ªói khi c·∫≠p nh·∫≠t gi·ªè h√†ng: " + e.getMessage(), e);
//            request.setAttribute("errorMessage", "C√≥ l·ªói khi x·ª≠ l√Ω y√™u c·∫ßu. Vui l√≤ng th·ª≠ l·∫°i.");
//            RequestDispatcher dispatcher = request.getRequestDispatcher("/error.jsp");
//            dispatcher.forward(request, response);
//        } catch (SQLException ex) {
//            Logger.getLogger(FavoriteProductsController.class.getName()).log(Level.SEVERE, null, ex);
//        }

//        // L·∫•y session t·ª´ request
//        HttpSession session = request.getSession();
//
//        // L·∫•y ƒë·ªëi t∆∞·ª£ng Customer t·ª´ session
//        Customer customer = (Customer) session.getAttribute("customer");
//
//        // Ki·ªÉm tra n·∫øu kh√°ch h√†ng kh√¥ng ƒëƒÉng nh·∫≠p ho·∫∑c session h·∫øt h·∫°n
//        if (customer == null) {
//            response.sendRedirect("login.jsp");
//            return;
//        }
//
//        // L·∫•y th√¥ng tin chi ti·∫øt c·ªßa kh√°ch h√†ng
//        String fullName = customer.getFullName();
//        String email = customer.getEmail();
//        String phoneNumber = customer.getPhoneNumber();
//        String address = customer.getAddress();
//        Date birthDate = customer.getBirthDate();
//        String gender = customer.getGender();
//
//        // ƒê∆∞a th√¥ng tin kh√°ch h√†ng v√†o request
//        request.setAttribute("fullName", fullName);
//        request.setAttribute("email", email);
//        request.setAttribute("phoneNumber", phoneNumber);
//        request.setAttribute("address", address);
//        request.setAttribute("birthDate", birthDate);
//        request.setAttribute("gender", gender);
//
//        // L·∫•y danh s√°ch s·∫£n ph·∫©m y√™u th√≠ch t·ª´ DAO
//        ProductDAO productDAO = new ProductDAO();
//        List<Product> favoriteProducts = productDAO.getFavoriteProducts(customer.getCustomerId());
//
//        // ƒê∆∞a danh s√°ch s·∫£n ph·∫©m v√†o request
//        request.setAttribute("favoriteProducts", favoriteProducts);
//
//        // Chuy·ªÉn h∆∞·ªõng t·ªõi JSP ƒë·ªÉ hi·ªÉn th·ªã th√¥ng tin
//        RequestDispatcher dispatcher = request.getRequestDispatcher("favoriteProducts.jsp");
//        dispatcher.forward(request, response);
        }

        @Override
        public String getServletInfo
        
            () {
        return "Short description";
        }// </editor-fold>

    }
